@page "/"
@using TodoBlazor.Services
@using TodoApp.Models
@inject ITodoService TodoService
@inject NavigationManager Navigation

<PageTitle>Todo List</PageTitle>

<div class="container mt-4">
    <h2>Todo List</h2>


    <button type="button" class="btn btn-primary w-100 mb-3" @onclick="@(() => Navigation.NavigateTo("/add-todo"))">
        <i class="bi bi-plus-circle me-2"></i>Add Todo
    </button>

    @if (isLoading)
    {
        <div class="text-center my-5">
            <div class="spinner-border"></div>
        </div>
    }
    else if (todos.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Due Date</th>
                        <th>Completed</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var todo in todos.OrderBy(t => t.IsCompleted).ThenBy(t => t.DueDate))
                    {
                        <tr class="@(todo.IsCompleted ? "table-light" : "")">
                            <td>@todo.Title</td>
                            <td class="text-wrap text-break text-truncate ellipses" style="max-width: 200px;">@todo.Description</td>
                            <td>@(todo.DueDate.HasValue? todo.DueDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                            <td>
                                @if (todo.IsCompleted)
                                {
                                    <span class="badge bg-success">Completed</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Not Completed</span>
                                }
                            </td>
                            <td>
                                <button class="btn btn-sm btn-info" @onclick="@(() => ViewTodo(todo))">View</button>
                                <button class="btn btn-sm btn-warning" @onclick="@(() => EditTodo(todo.Id))">Edit</button>
                                <button class="btn btn-sm btn-danger" @onclick="@(() => DeleteTodo(todo.Id))"
                                    disabled="@isDeleting">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center text-muted my-5">
            <i class="bi bi-inbox display-4"></i>
            <p class="mt-2">No todos yet.</p>
        </div>
    }
</div>

@code {
    private List<TodoItem> todos = new();
    private bool isLoading = true;
    private bool isDeleting = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadTodos();
    }

    protected override async Task OnParametersSetAsync()
    {
        // Reload data when returning to the page
        await LoadTodos();
    }

    private async Task LoadTodos()
    {
        isLoading = true;
        try
        {
            todos = await TodoService.GetAll();
        }
        finally
        {
            isLoading = false;
        }
    }


    private async Task ToggleComplete(TodoItem todo)
    {
        todo.IsCompleted = !todo.IsCompleted;
        try
        {
            await TodoService.Update(todo);
        }
        catch
        {
            todo.IsCompleted = !todo.IsCompleted;
        }
    }

    private async Task DeleteTodo(Guid id)
    {
        isDeleting = true;
        try
        {
            await TodoService.Delete(id);
            await LoadTodos();
        }
        finally
        {
            isDeleting = false;
        }
    }

    private void ViewTodo(TodoItem todo)
    {
        Navigation.NavigateTo($"/details/{todo.Id}");
    }

    private void EditTodo(Guid id)
    {
        Navigation.NavigateTo($"/edit-todo/{id}");
    }
}
