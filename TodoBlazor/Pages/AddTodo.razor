@page "/add-todo"
@using TodoBlazor.Services
@using TodoApp.Models
@inject ITodoService TodoService
@inject NavigationManager Navigation

<PageTitle>Add Todo</PageTitle>

<div class="container mt-4">
    <h2>Add Todo</h2>

    <form @onsubmit="AddTodoAsync">
        <div>
            <label class="form-label">Title *</label>
            <input class="form-control" @bind="_newTodo.Title" placeholder="Enter title" required maxlength="100" />
        </div>
        <div>
            <label class="form-label">Due Date</label>
            <input type="date" class="form-control" @bind="_newTodo.DueDate" />
        </div>
        <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea class="form-control" @bind="_newTodo.Description" placeholder="Optional"></textarea>
        </div>
        <button type="submit" class="btn btn-primary w-100 mt-3">Add</button>
        <button type="button" class="btn btn-secondary w-100 mt-3" @onclick="@OnCancel">Cancel</button>
    </form>
</div>

@code {
    readonly TodoItem _newTodo = new();

    private async Task AddTodoAsync()
    {
        if (string.IsNullOrWhiteSpace(_newTodo.Title)) return;

        try
        {
            await TodoService.Add(_newTodo);
            Navigation.NavigateTo("/");
        }
        catch
        {
            Console.WriteLine("Error adding todo");
        }
    }

    private void OnCancel()
    {
        Navigation.NavigateTo("/");
    }

}